{"ast":null,"code":"var _jsxFileName = \"/home/kevin-ore/Documents/teusaquillo-time-traveler/fe-time-traveler/src/components/GoogleMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './css/GoogleMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnyReactComponent = ({\n  text,\n  onClick,\n  id\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    position: 'relative'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n    src: \"/pin.png\",\n    alt: \"\",\n    className: \"custom-marker\",\n    onClick: () => onClick(id)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), text]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = AnyReactComponent;\nconst GoogleMap = () => {\n  _s();\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [selectedText, setSelectedText] = useState('');\n  const mapContainerRef = useRef(null);\n  useEffect(() => {\n    fetch('http://localhost:8000/locations').then(response => response.json()).then(data => {\n      console.log(data);\n      setMarkers(data);\n    }).catch(error => {\n      console.error('Error fetching marker data:', error);\n    });\n  }, []);\n  const defaultProps = {\n    center: {\n      lat: 4.652024891189568,\n      lng: -74.09331545257302\n    },\n    zoom: 14.3,\n    draggable: false\n  };\n\n  /*\n  const markers = [\n    {\n      id: 1,\n      lat: 4.641542013636317,\n      lng: -74.09167213103521,\n      text: 'Text for Marker 1',\n    },\n    {\n      id: 2,\n      lat: 4.639303311132185,\n      lng: -74.09792046924814,\n      text: 'Text for Marker 2',\n    },\n    // Add more markers as needed\n  ];\n    */\n\n  const handleMarkerClick = markerId => {\n    setSelectedMarker(markerId);\n    const selectedMarkerData = markers.find(marker => marker.id === markerId);\n    if (selectedMarkerData) {\n      setSelectedText(selectedMarkerData.text);\n    }\n  };\n  const handleMapClick = e => {\n    // Check if the click target is the map container or one of its children\n    if (mapContainerRef.current && !mapContainerRef.current.contains(e.target)) {\n      setSelectedMarker(null); // Clear selected marker when clicking outside the markers\n    }\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === 'Escape') {\n      setSelectedMarker(null); // Clear selected marker when the \"ESC\" key is pressed\n    }\n  };\n\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n    window.addEventListener('keydown', handleKeyDown);\n\n    // Cleanup effect on unmount\n    return () => {\n      document.body.style.overflow = 'visible';\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    ref: mapContainerRef,\n    onClick: handleMapClick,\n    children: [/*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyBoEQde7SsgSK7o3C89akbT1Z6dDl2T6nA'\n      },\n      defaultCenter: defaultProps.center,\n      defaultZoom: defaultProps.zoom,\n      draggable: defaultProps.draggable,\n      children: markers.map(marker => /*#__PURE__*/_jsxDEV(AnyReactComponent, {\n        lat: marker.lat,\n        lng: marker.lng,\n        id: marker.id,\n        onClick: handleMarkerClick\n      }, marker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), selectedMarker !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\",\n      children: selectedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMap, \"GWqo2DpzJNZEKv01W9StyV5PVOU=\");\n_c2 = GoogleMap;\nexport default GoogleMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"AnyReactComponent\");\n$RefreshReg$(_c2, \"GoogleMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","GoogleMapReact","jsxDEV","_jsxDEV","AnyReactComponent","text","onClick","id","style","position","children","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","GoogleMap","_s","markers","setMarkers","selectedMarker","setSelectedMarker","selectedText","setSelectedText","mapContainerRef","fetch","then","response","json","data","console","log","catch","error","defaultProps","center","lat","lng","zoom","draggable","handleMarkerClick","markerId","selectedMarkerData","find","marker","handleMapClick","e","current","contains","target","handleKeyDown","key","document","body","overflow","window","addEventListener","removeEventListener","ref","bootstrapURLKeys","defaultCenter","defaultZoom","map","_c2","$RefreshReg$"],"sources":["/home/kevin-ore/Documents/teusaquillo-time-traveler/fe-time-traveler/src/components/GoogleMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './css/GoogleMap.css';\n\nconst AnyReactComponent = ({ text, onClick, id }) => (\n  <div style={{ position: 'relative' }}>\n    <img\n      src=\"/pin.png\"\n      alt=\"\"\n      className=\"custom-marker\"\n      onClick={() => onClick(id)}\n    />\n    {text}\n  </div>\n);\n\nconst GoogleMap = () => {\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [selectedText, setSelectedText] = useState('');\n\n  const mapContainerRef = useRef(null);\n\n  useEffect(() => {\n    fetch('http://localhost:8000/locations')\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data)\n        setMarkers(data);\n      })\n      .catch((error) => {\n        console.error('Error fetching marker data:', error);\n      });\n  }, []);\n\n  const defaultProps = {\n    center: {\n      lat: 4.652024891189568,\n      lng: -74.09331545257302,\n    },\n    zoom: 14.3,\n    draggable: false,\n  };\n\n  /*\n  const markers = [\n    {\n      id: 1,\n      lat: 4.641542013636317,\n      lng: -74.09167213103521,\n      text: 'Text for Marker 1',\n    },\n    {\n      id: 2,\n      lat: 4.639303311132185,\n      lng: -74.09792046924814,\n      text: 'Text for Marker 2',\n    },\n    // Add more markers as needed\n  ];\n\n   */\n\n  const handleMarkerClick = (markerId) => {\n    setSelectedMarker(markerId);\n    const selectedMarkerData = markers.find((marker) => marker.id === markerId);\n    if (selectedMarkerData) {\n      setSelectedText(selectedMarkerData.text);\n    }\n  };\n\n  const handleMapClick = (e) => {\n    // Check if the click target is the map container or one of its children\n    if (mapContainerRef.current && !mapContainerRef.current.contains(e.target)) {\n      setSelectedMarker(null); // Clear selected marker when clicking outside the markers\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Escape') {\n      setSelectedMarker(null); // Clear selected marker when the \"ESC\" key is pressed\n    }\n  };\n\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n    window.addEventListener('keydown', handleKeyDown);\n\n    // Cleanup effect on unmount\n    return () => {\n      document.body.style.overflow = 'visible';\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  return (\n    <div className=\"map-container\" ref={mapContainerRef} onClick={handleMapClick}>\n      <GoogleMapReact\n        bootstrapURLKeys={{\n          key: 'AIzaSyBoEQde7SsgSK7o3C89akbT1Z6dDl2T6nA',\n        }}\n        defaultCenter={defaultProps.center}\n        defaultZoom={defaultProps.zoom}\n        draggable={defaultProps.draggable}\n      >\n        {markers.map((marker) => (\n          <AnyReactComponent\n            key={marker.id}\n            lat={marker.lat}\n            lng={marker.lng}\n            id={marker.id}\n            onClick={handleMarkerClick}\n          />\n        ))}\n      </GoogleMapReact>\n\n      {selectedMarker !== null && (\n        <div className=\"banner\">\n          {selectedText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GoogleMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/kevin-ore/Documents/teusaquillo-time-traveler/fe-time-traveler/src/components/GoogleMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './css/GoogleMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnyReactComponent = ({\n  text,\n  onClick,\n  id\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    position: 'relative'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n    src: \"/pin.png\",\n    alt: \"\",\n    className: \"custom-marker\",\n    onClick: () => onClick(id)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), text]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = AnyReactComponent;\nconst GoogleMap = () => {\n  _s();\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [selectedText, setSelectedText] = useState('');\n  const defaultProps = {\n    center: {\n      lat: 4.642297536361276,\n      lng: -74.09053903031885\n    },\n    zoom: 14.2\n  };\n  const markers = [{\n    id: 1,\n    lat: 4.641542013636317,\n    lng: -74.09167213103521,\n    text: 'Text for Marker 1'\n  }, {\n    id: 2,\n    lat: 4.639303311132185,\n    lng: -74.09792046924814,\n    text: 'Text for Marker 2'\n  }\n  // Add more markers as needed\n  ];\n\n  const handleMarkerClick = markerId => {\n    setSelectedMarker(markerId);\n    const selectedMarkerData = markers.find(marker => marker.id === markerId);\n    if (selectedMarkerData) {\n      setSelectedText(selectedMarkerData.text);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyBoEQde7SsgSK7o3C89akbT1Z6dDl2T6nA'\n      },\n      defaultCenter: defaultProps.center,\n      defaultZoom: defaultProps.zoom,\n      children: markers.map(marker => /*#__PURE__*/_jsxDEV(AnyReactComponent, {\n        lat: marker.lat,\n        lng: marker.lng,\n        onClick: handleMarkerClick\n      }, marker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), selectedMarker !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\",\n      children: [\"Banner for Marker \", selectedText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMap, \"CrtEqVLuprwZha3+3JBzQ3wYVwI=\");\n_c2 = GoogleMap;\nexport default GoogleMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"AnyReactComponent\");\n$RefreshReg$(_c2, \"GoogleMap\");","map":{"version":3,"names":["React","useState","GoogleMapReact","jsxDEV","_jsxDEV","AnyReactComponent","text","onClick","id","style","position","children","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","GoogleMap","_s","selectedMarker","setSelectedMarker","selectedText","setSelectedText","defaultProps","center","lat","lng","zoom","markers","handleMarkerClick","markerId","selectedMarkerData","find","marker","bootstrapURLKeys","key","defaultCenter","defaultZoom","map","_c2","$RefreshReg$"],"sources":["/home/kevin-ore/Documents/teusaquillo-time-traveler/fe-time-traveler/src/components/GoogleMap.js"],"sourcesContent":["import React,  { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './css/GoogleMap.css';\n\nconst AnyReactComponent = ({ text, onClick, id }) => (\n  <div style={{ position: 'relative' }}>\n    <img\n      src=\"/pin.png\"\n      alt=\"\"\n      className=\"custom-marker\"\n      onClick={() => onClick(id)}\n    />\n    {text}\n  </div>\n);\n\nconst GoogleMap = () => {\n\n    const [selectedMarker, setSelectedMarker] = useState(null);\n    const [selectedText, setSelectedText] = useState('');\n\n    const defaultProps = {\n        center: {\n          lat: 4.642297536361276,\n          lng: -74.09053903031885,\n        },\n        zoom: 14.2,\n    };\n\n\n    const markers = [\n        {\n            id: 1,\n            lat: 4.641542013636317,\n            lng: -74.09167213103521,\n            text: 'Text for Marker 1'\n        },\n        {\n            id: 2,\n            lat: 4.639303311132185,\n            lng: -74.09792046924814,\n            text: 'Text for Marker 2'\n        },\n        // Add more markers as needed\n      ];\n\n    const handleMarkerClick = (markerId) => {   \n        setSelectedMarker(markerId);\n        const selectedMarkerData = markers.find((marker) => marker.id === markerId);\n        if (selectedMarkerData) {\n            setSelectedText(selectedMarkerData.text);\n        }\n    };\n\n\n  return (\n    <div className=\"map-container\">\n        <GoogleMapReact\n            bootstrapURLKeys={{\n              key: 'AIzaSyBoEQde7SsgSK7o3C89akbT1Z6dDl2T6nA',\n            }}\n            defaultCenter={defaultProps.center}\n            defaultZoom={defaultProps.zoom}\n          >\n            {markers.map((marker) => (\n              <AnyReactComponent\n                key={marker.id}\n                lat={marker.lat}\n                lng={marker.lng}\n                onClick={handleMarkerClick}\n              />\n            ))}\n        </GoogleMapReact>\n\n        {selectedMarker !== null && (\n            <div className=\"banner\">\n                Banner for Marker {selectedText}\n            </div>\n        )}\n    </div>\n  );\n};\n\nexport default GoogleMap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/kevin-ore/Documents/teusaquillo-time-traveler/fe-time-traveler/src/components/GoogleMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport './css/GoogleMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleMapComponent = () => {\n  _s();\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [selectedText, setSelectedText] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false); // Track if the API is loaded\n\n  const defaultProps = {\n    center: {\n      lat: 4.642297536361276,\n      lng: -74.09053903031885\n    },\n    zoom: 14.2\n  };\n  const markers = [{\n    id: 1,\n    lat: 4.641542013636317,\n    lng: -74.09167213103521,\n    text: 'Text for Marker 1'\n  }, {\n    id: 2,\n    lat: 4.639303311132185,\n    lng: -74.09792046924814,\n    text: 'Text for Marker 2'\n  }\n  // Add more markers as needed\n  ];\n\n  useEffect(() => {\n    // Ensure the Google Maps API is loaded before setting isLoaded to true\n    if (window.google && window.google.maps) {\n      setIsLoaded(true);\n    }\n  }, []);\n  const handleMarkerClick = markerId => {\n    setSelectedMarker(markerId);\n    const selectedMarkerData = markers.find(marker => marker.id === markerId);\n    if (selectedMarkerData) {\n      setSelectedText(selectedMarkerData.text);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyBoEQde7SsgSK7o3C89akbT1Z6dDl2T6nA\",\n      onLoad: () => setIsLoaded(true) // Set isLoaded to true when the API is loaded\n      ,\n      children: isLoaded &&\n      /*#__PURE__*/\n      // Render the map only when the API is loaded\n      _jsxDEV(GoogleMap, {\n        mapContainerStyle: {\n          width: '100%',\n          height: '100%'\n        },\n        center: defaultProps.center,\n        zoom: defaultProps.zoom,\n        children: markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: marker.lat,\n            lng: marker.lng\n          },\n          icon: {\n            url: '/pin.png',\n            // URL to your custom marker image\n            scaledSize: new window.google.maps.Size(50, 50) // Adjust the size as needed\n          },\n\n          onClick: () => handleMarkerClick(marker.id),\n          draggable: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              width: '50px',\n              height: '50px'\n            },\n            children: marker.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 37\n          }, this)\n        }, marker.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), selectedMarker !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\",\n      children: selectedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n};\n_s(GoogleMapComponent, \"OJ8MEPreeTPziy5u3BUk8Wlm0HA=\");\n_c = GoogleMapComponent;\nexport default GoogleMapComponent;\nvar _c;\n$RefreshReg$(_c, \"GoogleMapComponent\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","GoogleMapComponent","_s","selectedMarker","setSelectedMarker","selectedText","setSelectedText","isLoaded","setIsLoaded","defaultProps","center","lat","lng","zoom","markers","id","text","window","google","maps","handleMarkerClick","markerId","selectedMarkerData","find","marker","className","children","googleMapsApiKey","onLoad","mapContainerStyle","width","height","map","position","icon","url","scaledSize","Size","onClick","draggable","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kevin-ore/Documents/teusaquillo-time-traveler/fe-time-traveler/src/components/GoogleMap.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {GoogleMap, LoadScript, Marker} from '@react-google-maps/api';\nimport './css/GoogleMap.css';\n\nconst GoogleMapComponent = () => {\n        const [selectedMarker, setSelectedMarker] = useState(null);\n        const [selectedText, setSelectedText] = useState('');\n        const [isLoaded, setIsLoaded] = useState(false); // Track if the API is loaded\n\n        const defaultProps = {\n            center: {\n                lat: 4.642297536361276,\n                lng: -74.09053903031885,\n            },\n            zoom: 14.2,\n        };\n\n        const markers = [\n            {\n                id: 1,\n                lat: 4.641542013636317,\n                lng: -74.09167213103521,\n                text: 'Text for Marker 1',\n            },\n            {\n                id: 2,\n                lat: 4.639303311132185,\n                lng: -74.09792046924814,\n                text: 'Text for Marker 2',\n            },\n            // Add more markers as needed\n        ];\n\n        useEffect(() => {\n            // Ensure the Google Maps API is loaded before setting isLoaded to true\n            if (window.google && window.google.maps) {\n                setIsLoaded(true);\n            }\n        }, []);\n\n        const handleMarkerClick = (markerId) => {\n            setSelectedMarker(markerId);\n            const selectedMarkerData = markers.find((marker) => marker.id === markerId);\n            if (selectedMarkerData) {\n                setSelectedText(selectedMarkerData.text);\n            }\n        };\n\n        return (\n            <div className=\"map-container\">\n                <LoadScript\n                    googleMapsApiKey=\"AIzaSyBoEQde7SsgSK7o3C89akbT1Z6dDl2T6nA\"\n                    onLoad={() => setIsLoaded(true)} // Set isLoaded to true when the API is loaded\n                >\n                    {isLoaded && ( // Render the map only when the API is loaded\n                        <GoogleMap\n                            mapContainerStyle={{\n                                width: '100%',\n                                height: '100%',\n                            }}\n                            center={defaultProps.center}\n                            zoom={defaultProps.zoom}\n                        >\n                            {markers.map((marker) => (\n                                <Marker\n                                    key={marker.id}\n                                    position={{lat: marker.lat, lng: marker.lng}}\n                                    icon={{\n                                        url: '/pin.png', // URL to your custom marker image\n                                        scaledSize: new window.google.maps.Size(50, 50), // Adjust the size as needed\n                                    }}\n                                    onClick={() => handleMarkerClick(marker.id)}\n                                    draggable={true}\n                                >\n                                    {/* Custom marker content */}\n                                    <div style={{position: 'relative', width: '50px', height: '50px'}}>\n                                        {marker.text}\n                                    </div>\n                                </Marker>\n                            ))}\n                        </GoogleMap>\n                    )}\n                </LoadScript>\n\n                {selectedMarker !== null && (\n                    <div className=\"banner\">\n                        {selectedText}\n                    </div>\n                )}\n            </div>\n        );\n    }\n;\n\nexport default GoogleMapComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAO,wBAAwB;AACpE,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjD,MAAMe,YAAY,GAAG;IACjBC,MAAM,EAAE;MACJC,GAAG,EAAE,iBAAiB;MACtBC,GAAG,EAAE,CAAC;IACV,CAAC;IACDC,IAAI,EAAE;EACV,CAAC;EAED,MAAMC,OAAO,GAAG,CACZ;IACIC,EAAE,EAAE,CAAC;IACLJ,GAAG,EAAE,iBAAiB;IACtBC,GAAG,EAAE,CAAC,iBAAiB;IACvBI,IAAI,EAAE;EACV,CAAC,EACD;IACID,EAAE,EAAE,CAAC;IACLJ,GAAG,EAAE,iBAAiB;IACtBC,GAAG,EAAE,CAAC,iBAAiB;IACvBI,IAAI,EAAE;EACV;EACA;EAAA,CACH;;EAEDrB,SAAS,CAAC,MAAM;IACZ;IACA,IAAIsB,MAAM,CAACC,MAAM,IAAID,MAAM,CAACC,MAAM,CAACC,IAAI,EAAE;MACrCX,WAAW,CAAC,IAAI,CAAC;IACrB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,iBAAiB,GAAIC,QAAQ,IAAK;IACpCjB,iBAAiB,CAACiB,QAAQ,CAAC;IAC3B,MAAMC,kBAAkB,GAAGR,OAAO,CAACS,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACT,EAAE,KAAKM,QAAQ,CAAC;IAC3E,IAAIC,kBAAkB,EAAE;MACpBhB,eAAe,CAACgB,kBAAkB,CAACN,IAAI,CAAC;IAC5C;EACJ,CAAC;EAED,oBACIhB,OAAA;IAAKyB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1B1B,OAAA,CAACH,UAAU;MACP8B,gBAAgB,EAAC,yCAAyC;MAC1DC,MAAM,EAAEA,CAAA,KAAMpB,WAAW,CAAC,IAAI,CAAE,CAAC;MAAA;MAAAkB,QAAA,EAEhCnB,QAAQ;MAAA;MAAM;MACXP,OAAA,CAACJ,SAAS;QACNiC,iBAAiB,EAAE;UACfC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE;QACZ,CAAE;QACFrB,MAAM,EAAED,YAAY,CAACC,MAAO;QAC5BG,IAAI,EAAEJ,YAAY,CAACI,IAAK;QAAAa,QAAA,EAEvBZ,OAAO,CAACkB,GAAG,CAAER,MAAM,iBAChBxB,OAAA,CAACF,MAAM;UAEHmC,QAAQ,EAAE;YAACtB,GAAG,EAAEa,MAAM,CAACb,GAAG;YAAEC,GAAG,EAAEY,MAAM,CAACZ;UAAG,CAAE;UAC7CsB,IAAI,EAAE;YACFC,GAAG,EAAE,UAAU;YAAE;YACjBC,UAAU,EAAE,IAAInB,MAAM,CAACC,MAAM,CAACC,IAAI,CAACkB,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAE;UACrD,CAAE;;UACFC,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACI,MAAM,CAACT,EAAE,CAAE;UAC5CwB,SAAS,EAAE,IAAK;UAAAb,QAAA,eAGhB1B,OAAA;YAAKwC,KAAK,EAAE;cAACP,QAAQ,EAAE,UAAU;cAAEH,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE;YAAM,CAAE;YAAAL,QAAA,EAC7DF,MAAM,CAACR;UAAI;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX;QAAC,GAZDpB,MAAM,CAACT,EAAE;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAaV,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IACd;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC,EAEZzC,cAAc,KAAK,IAAI,iBACpBH,OAAA;MAAKyB,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAClBrB;IAAY;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AACJ1C,EAAA,CAxFKD,kBAAkB;AAAA4C,EAAA,GAAlB5C,kBAAkB;AA0FxB,eAAeA,kBAAkB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}